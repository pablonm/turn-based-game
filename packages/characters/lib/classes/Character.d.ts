import Point from "../interfaces/Point";
import Directions from "../enums/Directions";
import ActionEffect from "../interfaces/Effects";
import Status from "../enums/Status";
declare abstract class Character {
    abstract code: string;
    abstract name: string;
    abstract player: string;
    abstract skills: Array<string>;
    abstract position: Point;
    abstract direction: Directions;
    abstract maxHealth: number;
    abstract currentHealth: number;
    abstract maxEnergy: number;
    abstract currentEnergy: number;
    abstract image: string;
    abstract status: Array<Status>;
    setCode(code: any): Character;
    setName(name: any): Character;
    setPlayer(player: any): Character;
    setSkills(skills: any): Character;
    setPosition(position: any): Character;
    setDirection(direction: any): Character;
    setMaxHealth(maxHealth: any): Character;
    setCurrentHealth(currentHealth: any): Character;
    setMaxEnergy(maxEnergy: any): Character;
    setCurrentEnergy(currentEnergy: any): Character;
    setImage(image: any): Character;
    setStatus(status: any): Character;
    addStatus(status: Status): Character;
    removeStatus(status: Status): Character;
    receiveDamage(game: any, receiverCode: any, attackerCode: any, amount: any): ActionEffect;
    applyStatus(game: any, receiverCode: any, attackerCode: any, status: any): ActionEffect;
    onCharacterReceivedDamage(game: any): ActionEffect;
    turnTick(game: any): ActionEffect;
    onCharacterMoved(game: any): ActionEffect;
}
export default Character;
